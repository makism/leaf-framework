
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ VERSION 1.0 +
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

package : leaf.core
file    : Loader.php
comments:
Make the call `$this->Load->library("Db", array("profile"=>"sample"), true);` 
return a reference to that library.
In case of the `Db library`, it must return a reference to an instance of type
`leaf_Db_Backend`, this means the actual connection. 

================================================================================

package : leaf.core.db
file    : Db.php
comments:
When only one connection will be handled, it would be cool to have the ability
to "bind" that connection on the "Db" object itself. For example, the following
should be valid:
    $this->Db->query...
Which equals to
    $this->Db->profileName->query...

================================================================================

package : leaf.core
file    : Router.php
comments:
Provide support for:
    1) having the methods name like "+methodName"
        and
    2) using only methods name in the Uri, without the controller name eg
        http://localhost/Blog/post, will be the same as
        http://localhost/post/ *or*
        http://localhost/+post/

Such behavior maybe achieved using the Static Router, and an "Map"
with all the possible Actions and Controllers...

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++ VERSION 2.0 & beyond +
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Major (to complete) API rewrite. The framework will break down into several
compoments. The target is to make leaf framework more than a "library" than a
big and monolithic php script.
    This will enable the developer to use *only* the compoments he needs, giving
him more freedom and flexibility.
